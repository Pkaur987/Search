{"version":3,"sources":["Data.js","App.js","reportWebVitals.js","index.js"],"names":["data","count","records","i","push","id","name","Faker","vehicle","model","company","manufacturer","type","vin","createRecord","App","useState","tableData","setTableData","className","style","color","placeholder","height","width","margin","onChange","event","data1","filter","curr","target","value","parseInt","toString","includes","toLowerCase","marginBottom","headerHeight","rowHeight","rowCount","length","rowGetter","index","rowData","label","dataKey","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAoBaA,EAlBQ,SAACC,GAGpB,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,GAAKF,EAAOE,IAC1BD,EAAQE,KAAK,CACXC,GAAIF,EACJG,KAAMC,IAAMC,QAAQC,QACpBC,QAASH,IAAMC,QAAQG,eACvBC,KAAML,IAAMC,QAAQI,OACpBC,IAAKN,IAAMC,QAAQK,QAGvB,OAAOX,EAIDY,CAAa,K,QCsDNC,G,QAlEH,WAAO,IAAD,EACkBC,mBAAShB,GAD3B,mBACTiB,EADS,KACEC,EADF,KA+BhB,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,oBAAIC,MAAO,CAAEC,MAAO,SAApB,iCAEA,uBACEhB,GAAG,SACHO,KAAK,OACLU,YAAY,SACZF,MAAO,CAAEG,OAAQ,GAAIC,MAAO,IAAKC,OAAQ,IACzCC,SAtCa,SAACC,GACpB,IAAMC,EAAQ5B,EAAK6B,QAAO,SAACC,GACzB,OAA0B,MAAtBH,EAAMI,OAAOC,OAEfC,SAASN,EAAMI,OAAOC,MAAO,KAC7BF,EAAKzB,GAAG6B,WAAWC,SAASR,EAAMI,OAAOC,QAIzCF,EAAKxB,KAAK8B,cAAcD,SAASR,EAAMI,OAAOC,MAAMI,gBAIpDN,EAAKlB,KAAKwB,cAAcD,SAASR,EAAMI,OAAOC,MAAMI,gBAIpDN,EAAKjB,IAAIuB,cAAcD,SAASR,EAAMI,OAAOC,MAAMI,gBAInDN,EAAKpB,QAAQ0B,cAAcD,SAASR,EAAMI,OAAOC,MAAMI,eAnBlBN,OAkBlC,KAKPZ,EAAaU,MAiBT,eAAC,IAAD,CACEJ,MAAO,KACPJ,MAAO,CAAEC,MAAO,QAASgB,aAAc,IACvCd,OAAQ,IACRe,aAAc,GACdC,UAAW,GACXC,SAAUvB,EAAUwB,OACpBC,UAAW,gBAAGC,EAAH,EAAGA,MAAH,OAAe1B,EAAU0B,IACpCC,QAAS3B,EARX,UAUE,cAAC,IAAD,CAAQO,MAAO,IAAKqB,MAAM,KAAKC,QAAQ,OACvC,cAAC,IAAD,CAAQtB,MAAO,IAAKqB,MAAM,UAAUC,QAAQ,SAC5C,cAAC,IAAD,CAAQtB,MAAO,IAAKqB,MAAM,OAAOC,QAAQ,SACzC,cAAC,IAAD,CAAQtB,MAAO,IAAKqB,MAAM,UAAUC,QAAQ,YAC5C,cAAC,IAAD,CAAQtB,MAAO,IAAKqB,MAAM,MAAMC,QAAQ,kBCrDnCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e9e7f553.chunk.js","sourcesContent":["//Using faker to create 1000000 random rows of vehicle data\r\nimport Faker from \"faker\";\r\nconst createRecord = (count) => {\r\n  let records = [];\r\n\r\n  for (let i = 1; i <= count; i++) {\r\n    records.push({\r\n      id: i,\r\n      name: Faker.vehicle.model(),\r\n      company: Faker.vehicle.manufacturer(),\r\n      type: Faker.vehicle.type(),\r\n      vin: Faker.vehicle.vin(),\r\n    });\r\n  }\r\n  return records;\r\n};\r\n\r\nlet data1 = [];\r\ndata1 = createRecord(1000000);\r\n\r\nexport const data = data1;\r\n","import \"./App.css\";\nimport { data } from \"./Data\";\nimport { useState } from \"react\";\nimport { Column, Table } from \"react-virtualized\";\nimport \"react-virtualized/styles.css\";\n\nconst App = () => {\n  const [tableData, setTableData] = useState(data);\n  //Function to Search for the input term\n  const handleChange = (event) => {\n    const data1 = data.filter((curr) => {\n      if (event.target.value == null) return curr;\n      else if (\n        parseInt(event.target.value, 10) &&\n        curr.id.toString().includes(event.target.value)\n      )\n        return curr;\n      else if (\n        curr.name.toLowerCase().includes(event.target.value.toLowerCase())\n      )\n        return curr;\n      else if (\n        curr.type.toLowerCase().includes(event.target.value.toLowerCase())\n      )\n        return curr;\n      else if (\n        curr.vin.toLowerCase().includes(event.target.value.toLowerCase())\n      )\n        return curr;\n      else if (\n        curr.company.toLowerCase().includes(event.target.value.toLowerCase())\n      )\n        return curr;\n    });\n    setTableData(data1);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h3 style={{ color: \"black\" }}>Vehicle Information</h3>\n        {/* <h6 style={{color:\"black\" ,marginTop: 0, marginBottom:5}}>Please type in the box below to search</h6> */}\n        <input\n          id=\"search\"\n          type=\"text\"\n          placeholder=\"Search\"\n          style={{ height: 30, width: 550, margin: 20 }}\n          onChange={handleChange}\n        />\n        {/* <DataGrid rows={tableData} columns={columns} pageSize={1000000} style={{margin: 20,  width:'100%'}}/> */}\n        {/* <Table columns={columns} data={data}/> */}\n        <Table\n          width={1200}\n          style={{ color: \"black\", marginBottom: 10 }}\n          height={500}\n          headerHeight={30}\n          rowHeight={40}\n          rowCount={tableData.length}\n          rowGetter={({ index }) => tableData[index]}\n          rowData={tableData}\n        >\n          <Column width={100} label=\"Id\" dataKey=\"id\" />\n          <Column width={200} label=\"Vehicle\" dataKey=\"name\" />\n          <Column width={300} label=\"Type\" dataKey=\"type\" />\n          <Column width={200} label=\"Company\" dataKey=\"company\" />\n          <Column width={400} label=\"VIN\" dataKey=\"vin\" />\n        </Table>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}